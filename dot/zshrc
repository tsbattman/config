#! /usr/bin/env

fpath=($HOME/thirdparty/zsh/zsh-completions/src $fpath /usr/local/share/zsh/site-functions)

# oh my zsh
ZSH=$HOME/thirdparty/zsh/oh-my-zsh
ZSH_THEME=""
plugins=(colored-man-pages colorize git-prompt)
CASE_SENSITIVE="true"
DISABLE_AUTO_UPDATE="true"
COMPLETION_WAITING_DOTS="true"
source $ZSH/oh-my-zsh.sh

# my stuff
autoload zmv
export LESS="-FRSX --tabs=2"
export EDITOR="vim"

# use  oh-my-zsh for now
#bindkey -v
#bindkey '^R' history-incremental-pattern-search-backward
function _wrap_sp() { [[ -n $1 ]] && echo "$1 " }
#PROMPT='%{$fg[blue]%}%D{[%I:%M:%S]} %{$fg[white]%}%2~ $(_wrap_sp $(prompt_git_info))%{$fg_bold[blue]%}%#%{$reset_color%} '
PROMPT='%{$fg[blue]%}%D{[%I:%M:%S]} %{$fg[white]%}%2~ %{$fg_bold[blue]%}%#%{$reset_color%} '
# RPS1='%{$fg_bold[green]%}%n@%m %{$reset_color%}'
RPS1='$(git_super_status)'

alias lt='ll -rt'
alias ccat='colorize'
if isosx; then
  alias myproc='ps -u $USER -f'
  alias showHidden='defaults write com.apple.finder AppleShowAllFiles YES'
  alias hideHidden='defaults write com.apple.finder AppleShowAllFiles NO'
else
  alias myproc='ps -u $USER uf'
fi
alias hp2ps='hp2ps -c'

# my opts
setopt no_beep
setopt no_hist_beep
setopt no_share_history

function cd () { builtin cd $1; ls; }
function pd () { builtin pushd $1; ls; }

executable lesspipe && eval $(lesspipe)
executable lesspipe.sh && export LESSOPEN="| lesspipe.sh %s" # XXX: Why has eval $(lesspipe.sh) stopped working???
executable aws_zsh_completer.sh && source `which aws_zsh_completer.sh`
if executable dircolors && [[ -f $HOME/.dircolors ]]; then
  eval $(dircolors $HOME/.dircolors)
  zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
else
  export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD
fi

function svndiff() { svn diff "$@" | pygmentize -l diff }
function zle-line-finish() { zle reset-prompt }

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

autoload insert-unicode-char
zle -N insert-unicode-char
bindkey '^Xi' insert-unicode-char

autoload -U +X bashcompinit && bashcompinit
# executable stack && eval "$(stack --bash-completion-script stack)"
# executable pandoc && eval "$(pandoc --bash-completion)"
export GHCUP_USE_XDG_DIRS=1

if [[ -n "$WSLENV" ]]; then
  # Replace default ssh sock and gpg-agent sock with wsl2-ssh-pageant
  # rm -f $SSH_AUTH_SOCK $HOME/.gnupg/S.gpg-agent
  if ! [[ -e "$SSH_AUTH_SOCK" ]]; then
    setsid nohup socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:$HOME/.local/bin/wsl2-ssh-pageant.exe
  fi
  if ! [[ -e "$HOME/.gnupg/S.gpg-agent" ]]; then
    setsid nohup socat UNIX-LISTEN:$HOME/.gnupg/S.gpg-agent,fork EXEC:"$HOME/.local/bin/wsl2-ssh-pageant.exe --gpg S.gpg-agent"
  fi
fi
