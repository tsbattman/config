#! /usr/bin/env zsh

# don't want global settings
# especially skip /etc/zprofile (see ~/.zprofile)
unsetopt GLOBAL_RCS

# zshrc does compinit, so don't do it twice
# skip_global_compinit=1

function extern() { echo "$HOME/thirdparty/$1" }

function executable() { command -v $1 >> /dev/null && [[ -x `command -v "$1"` ]] }
function isosx() { [[ `uname` = 'Darwin' ]] }
function isbsd() { [[ `uname` = 'FreeBSD' ]] }

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share
export XDG_DATA_DIRS=/usr/local/share:/usr/share
export XDG_CONFIG_DIRS=/etc/xdg
export XDG_STATE_HOME=$HOME/.local/state

if [[ -e "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh" ]]
then
  source "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
fi

typeset -gU path
function init_path() {
  path=($HOME/.local/bin $path)
  [[ -d /opt/endurance/bin ]] && path=(/opt/endurance/bin $path)
  [[ -d $HOME/.cargo/bin ]] && path=($HOME/.cargo/bin $path)
  [[ -d $HOME/.ghcup/bin ]] && path=($HOME/.ghcup/bin $path)
}
function init_aws() {
  local AWS_CONFIG=$HOME/etc/aws-config.ini
  [[ -f $AWS_CONFIG ]] && export AWS_CONFIG_FILE=$AWS_CONFIG
}

init_path
[[ -d /opt/haskell/bin ]] && path+=/opt/haskell/bin
#init_aws

# export DOCKER_HOST=tcp://seymour:2376
# export DOCKER_TLS_VERIFY=1

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export HISTSIZE=10000

limit coredumpsize unlimited
limit datasize 8192m
! isbsd && limit addressspace "$(( 16 * 1024 ))m"

# some things that handy to have in non-interactive shells
if [[ -f "/etc/debian_version" ]]; then
  export FZF_DEFAULT_COMMAND='fdfind --type f'
  export FZF_ALT_C_COMMAND="fdfind -t d . $HOME"
else
  export FZF_DEFAULT_COMMAND='fd --type f'
  export FZF_ALT_C_COMMAND="fd -t d . $HOME"
fi
alias convcn='iconv -f gb18030'
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles
export LEDGER_FILE=$HOME/notes/unified.ldg

[[ -d $HOME/.zshenv.d ]] && for script in $HOME/.zshenv.d/*; do
  [[ -r "$script" ]] && source "$script"
done
