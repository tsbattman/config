#! /usr/bin/env zsh

skip_global_compinit=1

GHC_VER=7.8.3
CABAL_VER=1.20

function extern() { echo "$HOME/thirdparty/$1" }

function executable() { which $1 >> /dev/null && [[ -x `which $1` ]] }
function isosx() { [[ `uname` = 'Darwin' ]] }

typeset -gU path
function init_path_base() {
  typeset -a bins
  if isosx; then
    bins=($HOME/Library/Python/2.7/bin /usr/local/sbin /usr/local/bin)
  else
    bins=($HOME/.local/bin)
  fi
  path=($HOME/bin $bins $HOME/.cabal/bin $path $HOME/code/prcore)
}
function init_path_extern() {
  [[ -d $(extern julia/julia) ]] && path=($(extern julia/julia) $path)
  [[ -d /usr/local/MATLAB/R2011a ]] && path=($path /usr/local/MATLAB/R2011a/bin)
  [[ -d /opt/ghc/$GHC_VER/bin ]] && path=(/opt/ghc/$GHC_VER/bin $path)
  [[ -d /opt/cabal/$CABAL_VER/bin ]] && path=(/opt/cabal/$CABAL_VER/bin $path)
}
function init_path() {
  init_path_base
  init_path_extern
}
function init_aws() {
  local AWS_CONFIG=$HOME/etc/aws-config.ini
  [[ -f $AWS_CONFIG ]] && export AWS_CONFIG_FILE=$AWS_CONFIG
}

init_path
#init_aws

export LANG=en_US.UTF-8
export HISTSIZE=10000

limit coredumpsize unlimited
limit datasize 1024m
limit addressspace "$(( 16 * 1024 ))m"

NVM_DIR=$HOME/thirdparty/js/nvm
NVM_VER=v0.10.21
#[[ -s $NVM_DIR/nvm.sh ]] && source $NVM_DIR/nvm.sh && nvm use "$NVM_DIR" &> /dev/null
# if [[ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]]; then
#   source $HOME/.nix-profile/etc/profile.d/nix.sh
#   manpath=($HOME/.nix-profile/share/man $manpath)
# fi
