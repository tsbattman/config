
silent function! OSX()
  return has('macunix')
endfunction

silent function! LINUX()
  return has('unix') && !has('macunix') && !has('win32unix')
endfunction

silent function! WINDOWS()
  return  (has('win16') || has('win32') || has('win64'))
endfunction

let mapleader='-'

" Thirdparty stuff
let g:ctrlp_map='<leader>t'
let g:ctrlp_cmd='CtrlPMixed'
let g:ctrlp_custom_ignore='dist/build'
let g:unite_source_grep_command = 'ag'
let g:unite_source_grep_default_opts = '-i --line-numbers --nocolor --nogroup --hidden'
let g:unite_source_grep_recursive_opt = ''
let g:syntastic_haskell_checkers=['hlint']

set rtp+=~/thirdparty/vim/bundle/neobundle.vim
let g:neobundle#types#git#default_protocol='git'
call neobundle#begin(expand('~/.vim/bundle'))
NeoBundleFetch 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc', { 'build': {
      \   'unix': 'make -f make_unix.mak'
      \ , 'mac': 'make -f make_mac.mak'
      \ , 'windows': 'nmake -f make_msvc.mak nodebug=1'
      \ }}
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'bling/vim-airline'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'Twinside/vim-hoogle'
" NeoBundle 'eagletmt/ghcmod-vim'
" NeoBundle 'JuliaLang/julia-vim'
" NeoBundle 'mxw/vim-jsx'
" NeoBundle 'derekwyatt/vim-scala'
" NeoBundle 'kchmck/vim-coffee-script'
" NeoBundle 'pangloss/vim-javascript'
" NeoBundle 'chriskempson/base16-vim'
" NeoBundle 'enomsg/vim-haskellConcealPlus'
" NeoBundle 'christoomey/vim-tmux-navigator'
" NeoBundle 'benmills/vimux'
call neobundle#end()

" call unite#filters#matcher_default#use(['matcher_fuzzy'])
" call unite#filters#sorter_default#use(['sorter_rank'])
" nnoremap <leader>t :<C-u>Unite  -buffer-name=files -start-insert buffer file_rec<CR>

""""" My stuff
syntax enable
set hlsearch

filetype plugin indent on

set background=dark
if has("gui_running")
  let g:solarized_contrast="high"
else
  let g:solarized_contrast="low"
endif
colorscheme solarized

"let loaded_matchparen=1 " Do not show matching parens

set nocompatible        " Use Vim defaults (much better!)
set bs=2                " Allow backspacing over everything in insert mode
set cursorline
set complete=.,w,b,u    " Word completion rules

set showmatch
set shiftwidth=2
set tabstop=2
set expandtab
set shiftround
set smartindent

set nowrap
set scrolloff=2
set sidescroll=1
set sidescrolloff=5
set laststatus=2

set foldmethod=indent   " Set folding method
set foldlevelstart=99   " Do not fold by default
set wildignore=*.fasl,*.o,*.class,*.hi,*.pyc

set formatoptions=tcroq " Formatting options
set nobackup            " Do not keep a backup file
set viminfo='20,<500,"500   " read/write a .viminfo file -- limit regs to 500 lines
set history=50          " keep 50 lines of command history
set ruler               " Show the cursor position all the time
set guioptions=c
set autoread
set shortmess=aTI
set splitbelow
set splitright

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" Don't use Ex mode, use Q for formatting
map Q gq

set t_ti=
set t_te=
set t_vb=
set novisualbell

if WINDOWS()
  set encoding=utf-16
  set fileencoding=utf-8
  set guifont=FangSong:h12
else
  " set guifont=Source\ Code\ Pro
  " set guifont=Anonymous\ Pro
  set guifont=Monaco
end

set grepprg=sgrep\ -nH
nnoremap <leader>* "zyiw:exe ":Unite -no-quit grep:.::\\\\<".@z."\\\\>"<CR>
nnoremap <leader>/ :Unite -no-quit grep:.:<CR>
" reload as china encoding
nnoremap <leader>cn :edit ++enc=gb18030<CR>
nnoremap } }zz
nnoremap { {zz
