
set nocompatible
silent function! OSX()
  return has('macunix')
endfunction

silent function! LINUX()
  return has('unix') && !has('macunix') && !has('win32unix')
endfunction

silent function! WINDOWS()
  return  (has('win16') || has('win32') || has('win64'))
endfunction

let mapleader="\<Space>"

" Thirdparty stuff
let g:ctrlp_map='<leader>o'
let g:ctrlp_cmd='CtrlP'
let g:ctrlp_working_path_mode=''
let g:ctrlp_custom_ignore='dist/'
let g:syntastic_haskell_checkers=['hlint']
let g:syntastic_cpp_checkers=['clang_check']
let g:syntastic_cpp_clang_check_post_args=''
let g:syntastic_r_checkers=['lintr']
let g:syntastic_r_lintr_linters="with_defaults(line_length_linter(120))"
let g:syntastic_enable_r_lintr_checker=1
let g:ledger_bin="hledger"

filetype off
if WINDOWS()
  set rtp+=~/vimfiles/bundle/Vundle.vim
else
  set rtp+=~/.vim/bundle/Vundle.vim
endif

call vundle#begin()
" Theme
Plugin 'altercation/vim-colors-solarized'
" Plugin 'chriskempson/base16-vim'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
" Searching
Plugin 'kien/ctrlp.vim'
Plugin 'mileszs/ack.vim'
" Languages
Plugin 'scrooloose/syntastic'
Plugin 'kongo2002/fsharp-vim'
Plugin 'ledger/vim-ledger'
Plugin 'maverickg/stan.vim'
" Plugin 'JuliaLang/julia-vim'
" Plugin 'derekwyatt/vim-scala'
" Plugin 'kchmck/vim-coffee-script'
" Plugin 'pangloss/vim-javascript'
" Plugin 'mxw/vim-jsx'
" Plugin 'Shougo/unite.vim'
" Haskell
" Plugin 'Twinside/vim-hoogle'
" Plugin 'eagletmt/ghcmod-vim'
" Plugin 'enomsg/vim-haskellConcealPlus'
" tmux integration
" Plugin 'christoomey/vim-tmux-navigator'
" Plugin 'benmills/vimux'
call vundle#end()

""""" My stuff
syntax enable
set hlsearch

filetype plugin indent on

set background=dark
if has("gui_running")
  let g:solarized_contrast="high"
else
  let g:solarized_contrast="low"
endif
colorscheme solarized

"let loaded_matchparen=1 " Do not show matching parens
let r_indent_align_args = 0

set bs=2                " Allow backspacing over everything in insert mode
set cursorline
" set complete=.,w,b,u    " Word completion rules
set relativenumber      " Relative line numbers

set showmatch
set shiftwidth=2
set tabstop=2
set expandtab
set shiftround
set smartindent

set nowrap
set scrolloff=2
set sidescroll=1
set sidescrolloff=5
set laststatus=2

set foldmethod=indent   " Set folding method
set foldlevelstart=99   " Do not fold by default
set wildignore=*.fasl,*.o,*.class,*.hi,*.pyc,*.so,*.exe

set formatoptions=tcroq " Formatting options
set nobackup            " Do not keep a backup file
set viminfo='20,<500,"500   " read/write a .viminfo file -- limit regs to 500 lines
set history=50          " keep 50 lines of command history
set ruler               " Show the cursor position all the time
set guioptions=c
set autoread
set shortmess=aTI
set splitbelow
set splitright

let g:python_recommended_style=0

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" Don't use Ex mode, use Q for formatting
map Q gq

set noerrorbells
set visualbell
set t_vb=
autocmd GUIEnter * set visualbell t_vb=

set t_ti=
set t_te=

if WINDOWS()
  set encoding=utf-8
  set fileencoding=utf-8
  set guifont=Source\ Code\ Pro
else
  " set guifont=Source\ Code\ Pro
  " set guifont=Anonymous\ Pro
  set guifont=Monaco
end

set grepprg="ag --vimgrep"
let g:ackprg="ag --vimgrep"
set grepformat=%f:%l:%c:%m
" reload as china encoding
nnoremap <leader>cn :edit ++enc=gb18030<CR>
nnoremap } }zz
nnoremap { {zz
nnoremap <leader>ag :Ack<Space>
